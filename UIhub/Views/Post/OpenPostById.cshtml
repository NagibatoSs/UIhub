@model UIhub.Models.ViewModels.PostContentViewModel
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<h1>@Model.PostViewModel.Title</h1>
<hr/>
<p style="font-size:24px">@Model.PostViewModel.Description</p>
<p>Дата создания: @Model.PostViewModel.Created</p>
<p>Автор: @Model.PostViewModel.Author.UserName @Model.PostViewModel.Author.Rank.Name @Model.PostViewModel.Author.Reputation</p>
<p><b>Оценок: @Model.PostViewModel.EstimateCount</b></p>
@* Макеты интерфейсов *@
@if (Model.PostViewModel.InterfaceLayouts.Any())
{
    <div class="align-content-center">
        @foreach (var layout in Model.PostViewModel.InterfaceLayouts)
        {
            <div class="d-flex align-items-center">
                @if (layout.SourceType == "figma")
                    @Html.Raw(layout.SourceUrl)
                else
                {
                    @*  <div style="background-image: url(@layout.SourceUrl)"></div> *@
                    <img style="max-width: 100%; class="fit-picture"
                    src="/Interfaces/@layout.SourceUrl"
                    alt="Interface files" />
                }
            </div>
        }
    </div>
}
@* Результаты оценок для автора поста *@
@if (Model.CurrentUserId!= null && Model.PostViewModel.Author.Id == Model.CurrentUserId)
{
    @* Результаты автоматической оценки *@
    @if (Model.PostViewModel.AutoAssessment != null)
    {
        <h3>Автоматическая оценка</h3>
        <p>@Html.Raw(@Model.PostViewModel.AutoAssessment.ResultText)</p>
        <p><b>Итоговая оценка: @Model.PostViewModel.AutoAssessment.ResultValue</b></p>
    }
    @* Результаты шкалы *@
    @if (Model.PostViewModel.EstimatesScale.Any())
    {
        <h4>Шкала оценки</h4>
        <div class="container">
            <div class="row">
                @for (int i = 0; i < Model.PostViewModel.EstimatesScale.Count(); i++)
                {
                    <div class="col-md-4 col-sm-6" mb-4>
                        <div class="card">
                            <h4>@Model.PostViewModel.EstimatesScale[i].Characteristic
                            </h4>
                            <h6>Среднее: @Model.PostViewModel.EstimatesResult.ScaleAverages[i]</h6>
                            <canvas id="myChart @i"/>
                            <script src="~/js/site.js" type="text/javascript"></script>
                            <script>
                                drawBar(@i, [@Model.PostViewModel.EstimatesScale[i].Count_1,
                                @Model.PostViewModel.EstimatesScale[i].Count_2,
                                @Model.PostViewModel.EstimatesScale[i].Count_3,
                                @Model.PostViewModel.EstimatesScale[i].Count_4,
                                @Model.PostViewModel.EstimatesScale[i].Count_5])
                            </script>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
    @* Результаты голосования *@
    @if (Model.PostViewModel.EstimatesVoting.Any())
    {
        <h4>Голосование</h4>
        <div class="container">
            <div class="row">
                @for (int i = 0; i < Model.PostViewModel.EstimatesVoting.Count(); i++)
                {
                    <div class="col-md-4 col-sm-6" mb-4>
                        <div class="card">
                            <h4>
                                @Model.PostViewModel.EstimatesVoting[i].Characteristic
                            </h4>
                            <canvas id="myVoting @i"/>
                            <script src="~/js/site.js" type="text/javascript"></script>
                            <script id="script @i">
                                var estimatesVoting = @Html.Raw(ViewBag.Voting);
                                drawVoting(@i, estimatesVoting);
                            </script>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
    @* Результаты ранжирования *@
    @if (Model.PostViewModel.EstimatesRanging.Any() && Model.PostViewModel.EstimatesRanging[0].Sequences.Any())
    {
        <h4>Ранжирование</h4>
        <h5>Самые распространенные последовательности</h5>
        @for (int i = 0; i < Model.PostViewModel.EstimatesRanging.Count(); i++)
        {
            var estimate = Model.PostViewModel.RangingEstimatesPresenter[i];
            <h6>
                @Model.PostViewModel.EstimatesRanging[i].Characteristic
            </h6>
            <div>
            @for (int k=0; (k<estimate.Contents.Count()) && (k<3) ;k++)
                {
                    <h3>@(k+1)</h3>
                    <div class="row">
                    @for (int j = 0; j < Model.PostViewModel.EstimatesRanging[i].RangingObjects.Count; j++)
                    {
                            var a = estimate.Contents[k];
                            var index = int.Parse(a[j].ToString());
                        <div class="col-auto">
                            <p>@Model.PostViewModel.EstimatesRanging[i].RangingObjects[index].Content</p>
                        </div>
                    }
                    </div>
                }
            </div>
        }
    }
}
@* Оценивание для экспертов *@
else 
{
    @if (User.Identity.IsAuthenticated && Model.IsPostEstimatedByUser == false)
    {
        @if (Model.PostViewModel.EstimatesScale.Any())
        {
            @*  Оценивание шкала *@
            <form asp-controller="Estimate" asp-action="SetScaleEstimate" method="post">
                @for (int i = 0; i < Model.PostViewModel.EstimatesScale.Count; i++)
                {
                    <p>@Model.PostViewModel.EstimatesScale[i].Characteristic
                    </p>
                    <input type="radio" value="1" name="Model.NewEstimateViewModel[@i].SelectedValue" />
                    <input type="radio" value="2" name="Model.NewEstimateViewModel[@i].SelectedValue" />
                    <input type="radio" value="3" name="Model.NewEstimateViewModel[@i].SelectedValue" />
                    <input type="radio" value="4" name="Model.NewEstimateViewModel[@i].SelectedValue" />
                    <input type="radio" value="5" name="Model.NewEstimateViewModel[@i].SelectedValue" />
                    <input type="hidden" name="Model.NewEstimateViewModel[@i].Characteristic" value="@Model.PostViewModel.EstimatesScale[i].Characteristic" />
                    <input type="hidden" name="Model.PostViewModel.EstimatesScale[@i].Id" value="@Model.PostViewModel.EstimatesScale[i].Id" />
                }
                <input type="hidden" name="Model.Id" value="@Model.Id" />
                <div>
                    <button type="submit">Отправить оценку</button>
                </div>
            </form>
        }

        @* Оценивание голосование *@
        @if (Model.PostViewModel.EstimatesVoting.Any())
        {
            <form asp-controller="Estimate" asp-action="SetVotingEstimate" method="post">
                @for (int i = 0; i < Model.PostViewModel.EstimatesVoting.Count; i++)
                {
                    <p>
                        @Model.PostViewModel.EstimatesVoting[i].Characteristic
                    </p>
                    @for (int j = 0; j < Model.PostViewModel.EstimatesVoting[i].VotingObjects.Count; j++)
                    {
                        <p>@Model.PostViewModel.EstimatesVoting[i].VotingObjects[j].Content</p>
                        <input type="radio" value="@j" name="Model.NewEstimateViewModel[@i].SelectedValue" />
                    }
                    <input type="hidden" name="Model.NewEstimateViewModel[@i].Characteristic" value="@Model.PostViewModel.EstimatesVoting[i].Characteristic" />
                    <input type="hidden" name="Model.PostViewModel.EstimatesVoting[@i].Id" value="@Model.PostViewModel.EstimatesVoting[i].Id" />
                }
                <input type="hidden" name="Model.Id" value="@Model.Id" />
                <div>
                    <button type="submit">Отправить оценку</button>
                </div>
            </form>
        }
        @* Оценивание ранжирование*@
        @if (Model.PostViewModel.EstimatesRanging.Any())
        {
            <form asp-controller="Estimate" asp-action="SetRangingEstimate" method="post">
                @for (int i = 0; i < Model.PostViewModel.EstimatesRanging.Count; i++)
                {
                    <p>
                        @Model.PostViewModel.EstimatesRanging[i].Characteristic
                    </p>
                    @for (int j = 0; j < Model.PostViewModel.EstimatesRanging[i].RangingObjects.Count; j++)
                    {
                        <p>@Model.PostViewModel.EstimatesRanging[i].RangingObjects[j].Content
                        </p>
                        <input type="number" name="Model.PostViewModel.EstimatesRanging[@i].RangingObjects[@j].NumberInSequence" step="1" min="1" max="@Model.PostViewModel.EstimatesRanging[i].RangingObjects.Count"/>
                    }
                    <input type="hidden" name="Model.NewEstimateViewModel[@i].Characteristic" value="@Model.PostViewModel.EstimatesRanging[i].Characteristic" />
                    <input type="hidden" name="Model.PostViewModel.EstimatesRanging[@i].Id" value="@Model.PostViewModel.EstimatesRanging[i].Id" />
                }
                <input type="hidden" name="Model.Id" value="@Model.Id" />
                <div>
                    <button type="submit">Отправить оценку</button>
                </div>
            </form>
        }
    }
}
<hr/>
@* Текстовые ответы форма ввода *@
@if (User.Identity.IsAuthenticated)
{
    <form asp-controller="PostReply" asp-action="PlaceReply" method="post">
        <div class="form-group" style="margin-bottom:10px">
            <p style="margin-bottom:10px font-size:14px">Написать ответ</p>
            <textarea asp-for="NewReplyModel.Content" class="form-control"></textarea>
        </div>
        <input asp-for="Id" type="hidden" value="@Model.Id" />
        <button type="submit" id="submitPostBtn" class="btn btn-primary mar_bot">
            Отправить ответ
        </button>
    </form>
}
else
{
    <p>Авторизуйтесь, чтобы отправить ответ</p>
}
@* Текстовые ответы вывод *@
@if (Model.PostViewModel.Replies.Any())
{
    <table class="table table-hover">
        <tbody>
            @foreach (var reply in Model.PostViewModel.Replies)
            {
                <tr>
                    <td>
                        <a>@reply.Author.UserName</a>
                    </td>
                    <td>
                        @reply.Author.Rank.Name
                        Репутация: @reply.Author.Reputation
                    </td>
                    <td>
                        @reply.Content
                    </td>
                    <td>
                        @reply.Created
                    </td>
                    <td>
                        @reply.LikesCount
                    </td>
                    <td>
                        @if (Model.CurrentUserId != reply.Author.Id)
                        {
                            <form asp-controller="PostReply" asp-action="SetLike" asp-route-id="@reply.Id" method="post">
                                @if (reply.PostReplyLikes != null)
                                {
                                    @if (!reply.PostReplyLikes.Select(r => r.User.Id).Contains(Model.CurrentUserId))
                                    {
                                        <input type="hidden" name="isLike" value="true" />
                                        <button type="submit" class="like-button"></button>
                                    }
                                    else
                                    {
                                        <input type="hidden" name="isLike" value="false" />
                                        <button type="submit" class="dislike-button"></button>
                                    }
                                }
                            </form>
                        }
                        else
                        {
                            <button type="button" disabled class="like-button"></button>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@if (User.Identity.IsAuthenticated &&
                       (User.IsInRole("admin") || (Model.PostViewModel.Author.Id == Model.CurrentUserId)))
{
    <div class="row">
        <div class="form-group col-auto">

            <form asp-controller="Post" asp-action="EditPost" method="post">
                <input asp-for="Id" type="hidden" value="@Model.Id" />
                <button class="btn btn-outline-primary" type="submit">Редактировать публикацию</button>
            </form>
        </div>
        <div class="form-group col-auto" style="margin-bottom: 10px">
            <form asp-controller="Post" asp-action="DeletePost" method="post">
                <input asp-for="Id" type="hidden" value="@Model.Id" />
                @Html.ActionLink(
                         "Удалить публикацию",
                         "DeletePost",
                         "Post",
                         new { confirm = true, id = @Model.Id },
                         new
                         {
                             @class = "form-control btn btn-outline-danger",
                             onclick = "return confirm('Вы действительно хотите удалить публикацию?')"
                         })
            </form>
        </div>
    </div>
}