@model UIhub.Models.ViewModels.PostContentViewModel
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
@if (User.Identity.IsAuthenticated && 
    (User.IsInRole("admin") || (Model.PostViewModel.Author.Id == Model.CurrentUserId)))
{
    <form asp-controller="Post" asp-action="EditPost" method="post">
        <input asp-for="Id" type="hidden" value="@Model.Id" />
        <button type="submit">Редактировать публикацию</button>
    </form>
    <form asp-controller="Post" asp-action="DeletePost" method="post">
        <input asp-for="Id" type="hidden" value="@Model.Id" />
        @Html.ActionLink(
                "Удалить публикацию",
                "DeletePost",
                "Post",
                new { confirm = true, id = @Model.Id },
                new { onclick = "return confirm('Вы действительно хотите удалить публикацию?')" })
        @* <button type="submit">Удалить публикацию</button> *@
    </form>
}
<h1>@Model.PostViewModel.Title</h1>
<h3>@Model.PostViewModel.Description</h3>
<p>Дата создания: @Model.PostViewModel.Created</p>
<p>Создал: @Model.PostViewModel.Author.UserName</p>
<p>Просмотров: @Model.PostViewModel.Views</p>
<p>Оценок: @Model.PostViewModel.EstimateCount</p>
@* Макеты интерфейсов *@
@if (Model.PostViewModel.InterfaceLayouts.Any())
{
    <table class="table table-hover" id="postIndexTable">
        <tbody>
            @foreach (var layout in Model.PostViewModel.InterfaceLayouts)
            {
                <tr>
                    <td>
                        @Html.Raw(layout.SourceUrl)
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@* Результаты оценок для автора поста *@
@if (Model.CurrentUserId!= null && Model.PostViewModel.Author.Id == Model.CurrentUserId)
{
    @* Результаты автоматической оценки *@
    @if (Model.PostViewModel.AutoAssessment != null)
    {
        <p>Автоматическая оценка</p>
        <p>Итоговая оценка: @Model.PostViewModel.AutoAssessment.ResultValue</p>
        <p>@Model.PostViewModel.AutoAssessment.ResultText</p>
    }
    @* Результаты шкалы *@
    @if (Model.PostViewModel.EstimatesScale.Any())
    {
        @for (int i = 0; i < Model.PostViewModel.EstimatesScale.Count(); i++)
        {
            <h4>@Model.PostViewModel.EstimatesScale[i].Characteristic
            </h4>
            <h6>Среднее: @Model.PostViewModel.EstimatesResult.ScaleAverages[i]</h6>
            <div>
                <canvas id="myChart @i"/>
                <script src="~/js/site.js" type="text/javascript"></script>
                <script>
                    drawBar(@i, [@Model.PostViewModel.EstimatesScale[i].Count_1,
                    @Model.PostViewModel.EstimatesScale[i].Count_2,
                    @Model.PostViewModel.EstimatesScale[i].Count_3,
                    @Model.PostViewModel.EstimatesScale[i].Count_4,
                    @Model.PostViewModel.EstimatesScale[i].Count_5])
                </script>
            </div>
        }
    }
    @* Результаты голосования *@
     @if (Model.PostViewModel.EstimatesVoting.Any())
    {
        @for (int i = 0; i < Model.PostViewModel.EstimatesVoting.Count(); i++)
        {
            <h4>
                @Model.PostViewModel.EstimatesVoting[i].Characteristic
            </h4>
            <div>
                <canvas id="myVoting @i"/>
                <script src="~/js/site.js" type="text/javascript"></script>
                <script id="script @i">
                    var estimatesVoting = @Html.Raw(ViewBag.Voting);
                    drawVoting(@i, estimatesVoting);
                </script>
            </div>
        }
    }
    @* Результаты ранжирования *@
    @if (Model.PostViewModel.EstimatesRanging.Any())
    {
        <h3>Самые распространенные последовательности</h3>
        @for (int i = 0; i < Model.PostViewModel.EstimatesRanging.Count(); i++)
        {
            var estimate = Model.PostViewModel.RangingEstimatesPresenter[i];
            <h4>
                @Model.PostViewModel.EstimatesRanging[i].Characteristic
            </h4>
            <div>
            @for (int k=0; (k<estimate.Contents.Count()) && (k<3) ;k++)
                {
                    <h3>@(k+1)</h3>
                    <div class="row">
                    @for (int j = 0; j < Model.PostViewModel.EstimatesRanging[i].RangingObjects.Count; j++)
                    {
                            var a = estimate.Contents[k];
                            var index = int.Parse(a[j].ToString());
                        <div class="col-auto">
                            <p>@Model.PostViewModel.EstimatesRanging[i].RangingObjects[index].Content</p>
                        </div>
                    }
                    </div>
                }
            </div>
        }
    }
}
@* Оценивание для экспертов *@
else 
{
    @if (Model.PostViewModel.EstimatesScale.Any())
{
   @*  Оценивание шкала *@
    <form asp-controller="Estimate" asp-action="SetScaleEstimate" method="post">
        @for (int i = 0; i < Model.PostViewModel.EstimatesScale.Count; i++)
        {
            <p>@Model.PostViewModel.EstimatesScale[i].Characteristic</p>
                <input type="radio" value="1" name="Model.NewScaleEstimateViewModel[@i].SelectedValue" />
                <input type="radio" value="2" name="Model.NewScaleEstimateViewModel[@i].SelectedValue" />
                <input type="radio" value="3" name="Model.NewScaleEstimateViewModel[@i].SelectedValue" />
                <input type="radio" value="4" name="Model.NewScaleEstimateViewModel[@i].SelectedValue" />
                <input type="radio" value="5" name="Model.NewScaleEstimateViewModel[@i].SelectedValue" />
            <input type="hidden" name="Model.NewScaleEstimateViewModel[@i].Characteristic" value="@Model.PostViewModel.EstimatesScale[i].Characteristic" />
            <input type="hidden" name="Model.PostViewModel.EstimatesScale[@i].Id" value="@Model.PostViewModel.EstimatesScale[i].Id" />
        }
        <input type="hidden" name="Model.Id" value="@Model.Id" />
        <div>
            <button type="submit">Отправить оценку</button>
        </div>
    </form>
}

@* Оценивание голосование *@
@if (Model.PostViewModel.EstimatesVoting.Any())
{
    <form asp-controller="Estimate" asp-action="SetVotingEstimate" method="post">
        @for (int i = 0; i < Model.PostViewModel.EstimatesVoting.Count; i++)
        {
            <p>
                @Model.PostViewModel.EstimatesVoting[i].Characteristic
            </p>
                @for (int j = 0; j < Model.PostViewModel.EstimatesVoting[i].VotingObjects.Count; j++)
            {
                    <p>@Model.PostViewModel.EstimatesVoting[i].VotingObjects[j].Content</p>
                    <input type="radio" value="@j" name="Model.NewVotingEstimateViewModel[@i].SelectedValue" />
            }
            <input type="hidden" name="Model.NewVotingEstimateViewModel[@i].Characteristic" value="@Model.PostViewModel.EstimatesVoting[i].Characteristic" />
            <input type="hidden" name="Model.PostViewModel.EstimatesVoting[@i].Id" value="@Model.PostViewModel.EstimatesVoting[i].Id" />
        }
        <input type="hidden" name="Model.Id" value="@Model.Id" />
        <div>
            <button type="submit">Отправить оценку</button>
        </div>
    </form>
}
    @* Оценивание ранжирование*@
@if (Model.PostViewModel.EstimatesRanging.Any())
{
    <form asp-controller="Estimate" asp-action="SetRangingEstimate" method="post">
        @for (int i = 0; i < Model.PostViewModel.EstimatesRanging.Count; i++)
        {
            <p>
                @Model.PostViewModel.EstimatesRanging[i].Characteristic
            </p>
            @for (int j = 0; j < Model.PostViewModel.EstimatesRanging[i].RangingObjects.Count; j++)
            {
                <p>@Model.PostViewModel.EstimatesRanging[i].RangingObjects[j].Content</p>
                <input type="number" name="Model.PostViewModel.EstimatesRanging[@i].RangingObjects[@j].NumberInSequence" step="1" min="1" max="@Model.PostViewModel.EstimatesRanging[i].RangingObjects.Count"/>
            }
            <input type="hidden" name="Model.NewRangingEstimateViewModel[@i].Characteristic" value="@Model.PostViewModel.EstimatesRanging[i].Characteristic" />
            <input type="hidden" name="Model.PostViewModel.EstimatesRanging[@i].Id" value="@Model.PostViewModel.EstimatesRanging[i].Id" />
        }
        <input type="hidden" name="Model.Id" value="@Model.Id" />
        <div>
            <button type="submit">Отправить оценку</button>
        </div>
    </form>
}
}
@* Текстовые ответы форма ввода *@
@if (User.Identity.IsAuthenticated)
{
    <form asp-controller="PostReply" asp-action="PlaceReply" method="post">
        <div class="form-group">
            <label asp-for="NewReplyModel.Content">Ответ:</label>
            <textarea asp-for="NewReplyModel.Content" class="form-control"></textarea>
        </div>
        <input asp-for="Id" type="hidden" value="@Model.Id" />
        <button type="submit" id="submitPostBtn" class="btn btn-submitPost">
            Отправить ответ
        </button>
    </form>
}
else
{
    <p>Авторизуйтесь, чтобы оставить ответ</p>
}
@* Текстовые ответы вывод *@
@if (Model.PostViewModel.Replies.Any())
{
    <table class="table table-hover">
        <tbody>
            @foreach (var reply in Model.PostViewModel.Replies)
            {
                <tr>
                    <td>
                        <a>@reply.Author.UserName</a>
                    </td>
                    <td>
                        @reply.Author.Rank.Name
                        Репутация: @reply.Author.Reputation
                    </td>
                    <td>
                        @reply.Content
                    </td>
                    <td>
                        @reply.Created
                    </td>
                    <td>
                        <p>Лайки: </p>@reply.LikesCount
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>Ответов пользователей пока нет(</p>
}